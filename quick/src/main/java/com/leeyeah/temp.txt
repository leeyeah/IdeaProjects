

查看PEM格式证书的信息: openssl x509 -in certificate.pem -text -noout
查看DER格式证书的信息: openssl x509 -in certificate.der -inform der -text -noout
查看PEM格式KEY: openssl rsa -in mykey.key -text -noout
查看DER格式KEY: openssl rsa -in mykey.key -text -noout -inform der
查看CSR请求文件: openssl req -in my.csr   -text -noout [-inform der]

查看p12文件（IIS用的多，需要提取密码）
openssl pkcs12 -in for-iis.pfx -out for-iis.pem -nodes

生成pfx的命令:
openssl pkcs12 -export -in certificate.crt -inkey privateKey.key -out certificate.pfx [-certfile CACert.crt]

证书/Key/CSR编码转换
PEM转为DER openssl x509/RSA/req -in cert.crt -outform der -out cert.der
DER转为PEM openssl x509/RSA/req -in cert.crt -inform der -outform pem -out cert.pem

生成CSR
openssl req -newkey rsa:2048 -new -nodes -keyout my.key -out my.csr
生成自签名证书
openssl req -newkey rsa:2048 -new -nodes -x509 -days 3650 -keyout key.pem -out cert.pem




openssl req -in sign.rsa.yeah.csr.pem -inform der -text -noout


    public static byte[] encodeSM2SignToDER(byte[] rbytes,byte[] sbytes) throws IOException  {
        //要保证大数是正数
        BigInteger r = new BigInteger(1, rbytes);
        BigInteger s = new BigInteger(1, sbytes);
        ASN1EncodableVector v = new ASN1EncodableVector();
        v.add(new ASN1Integer(r));
        v.add(new ASN1Integer(s));
        return new DERSequence(v).getEncoded(ASN1Encoding.DER);
    }
